{"ast":null,"code":"import _slicedToArray from \"/home/or/Desktop/Programming Learning/Full Stack Open/part2/country_data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/or/Desktop/Programming Learning/Full Stack Open/part2/country_data/src/components/countries.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Country = props => {\n  return props.country.name;\n};\n\nconst Countries = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        countries = _useState2[0],\n        setCountries = _useState2[1];\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log(response);\n      setCountries(response.data);\n    });\n  }, []);\n\n  function handleSingleCountry(cntrs) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, cntrs[0].name), cntrs[0].capital, cntrs[0].population, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n  function filterCountries() {\n    return countries.filter(country => country.name.toLowerCase().includes(props.input.toLowerCase()));\n  }\n\n  const cntrs = filterCountries();\n  if (cntrs.length === 1) return handleSingleCountry(cntrs);\n  return cntrs.length < 11 || !props.input ? filterCountries().map(country => React.createElement(\"li\", {\n    key: country.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Country, {\n    country: country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))) : 'Too many matches, specify another filter';\n};\n\nexport default Countries;","map":{"version":3,"sources":["/home/or/Desktop/Programming Learning/Full Stack Open/part2/country_data/src/components/countries.js"],"names":["React","useState","useEffect","axios","Country","props","country","name","Countries","countries","setCountries","get","then","response","console","log","data","handleSingleCountry","cntrs","capital","population","filterCountries","filter","toLowerCase","includes","input","length","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,SACEA,KAAK,CAACC,OAAN,CAAcC,IADhB;AAGD,CAJD;;AAMA,MAAMC,SAAS,GAAIH,KAAD,IAAW;AAAA,oBACOJ,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QACpBQ,SADoB;AAAA,QACTC,YADS;;AAG3BR,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACQ,GAAN,CAAU,sCAAV,EACGC,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,YAAY,CAACG,QAAQ,CAACG,IAAV,CAAZ;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAAC,CAAD,CAAL,CAASX,IAAd,CADF,EAEGW,KAAK,CAAC,CAAD,CAAL,CAASC,OAFZ,EAGGD,KAAK,CAAC,CAAD,CAAL,CAASE,UAHZ,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAUD;;AAED,WAASC,eAAT,GAA2B;AACzB,WAAOZ,SAAS,CAACa,MAAV,CAAkBhB,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAagB,WAAb,GAA2BC,QAA3B,CAAoCnB,KAAK,CAACoB,KAAN,CAAYF,WAAZ,EAApC,CAA9B,CAAP;AACD;;AAED,QAAML,KAAK,GAAGG,eAAe,EAA7B;AACA,MAAIH,KAAK,CAACQ,MAAN,KAAiB,CAArB,EAAwB,OAAOT,mBAAmB,CAACC,KAAD,CAA1B;AACxB,SACEA,KAAK,CAACQ,MAAN,GAAe,EAAf,IAAqB,CAACrB,KAAK,CAACoB,KAA5B,GACEJ,eAAe,GAAGM,GAAlB,CAAuBrB,OAAD,IAAa;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuB,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAED,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAnC,CADF,GAGA,0CAJF;AAMD,CApCD;;AAsCA,eAAeE,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Country = (props) => {\n  return (\n    props.country.name\n  )\n}\n\nconst Countries = (props) => {\n  const [countries, setCountries] = useState([])\n  \n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all')\n      .then((response) => {\n        console.log(response);\n        setCountries(response.data)\n      })\n  }, [])\n  \n  function handleSingleCountry(cntrs) {\n    return (\n      <div>\n        <h2>{cntrs[0].name}</h2>\n        {cntrs[0].capital}\n        {cntrs[0].population}\n        <ul>\n          \n        </ul>\n      </div>\n    )\n  }\n\n  function filterCountries() {\n    return countries.filter((country) => country.name.toLowerCase().includes(props.input.toLowerCase()))\n  }\n\n  const cntrs = filterCountries()\n  if (cntrs.length === 1) return handleSingleCountry(cntrs)\n  return (\n    cntrs.length < 11 || !props.input ?\n      filterCountries().map((country) => <li key={country.name}><Country country={country}></Country></li>)\n    :\n    'Too many matches, specify another filter'\n  )\n}\n\nexport default Countries"]},"metadata":{},"sourceType":"module"}