{"ast":null,"code":"import _slicedToArray from \"/home/or/Desktop/Programming Learning/Full Stack Open/part2/country_data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/or/Desktop/Programming Learning/Full Stack Open/part2/country_data/src/components/countries.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Country = props => {\n  return props.country.name;\n};\n\nconst Countries = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        countries = _useState2[0],\n        setCountries = _useState2[1];\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log(response);\n      setCountries(response.data);\n    });\n  }, []);\n\n  function handleSingleCountry() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, countries[0].name), countr);\n  }\n\n  function filterCountries() {\n    return countries.filter(country => country.name.toLowerCase().includes(props.input.toLowerCase()));\n  }\n\n  const cntrs = filterCountries();\n  if (cntrs.length === 1) return handleSingleCountry();\n  return cntrs.length < 11 || !props.input ? filterCountries().map(country => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Country, {\n    key: country.name,\n    country: country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))) : 'Too many matches, specify another filter';\n};\n\nexport default Countries;","map":{"version":3,"sources":["/home/or/Desktop/Programming Learning/Full Stack Open/part2/country_data/src/components/countries.js"],"names":["React","useState","useEffect","axios","Country","props","country","name","Countries","countries","setCountries","get","then","response","console","log","data","handleSingleCountry","countr","filterCountries","filter","toLowerCase","includes","input","cntrs","length","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,SACEA,KAAK,CAACC,OAAN,CAAcC,IADhB;AAGD,CAJD;;AAMA,MAAMC,SAAS,GAAIH,KAAD,IAAW;AAAA,oBACOJ,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QACpBQ,SADoB;AAAA,QACTC,YADS;;AAG3BR,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACQ,GAAN,CAAU,sCAAV,EACGC,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,YAAY,CAACG,QAAQ,CAACG,IAAV,CAAZ;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,mBAAT,GAA+B;AAC7B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,SAAS,CAAC,CAAD,CAAT,CAAaF,IAAlB,CADF,EAEGW,MAFH,CADF;AAMD;;AAED,WAASC,eAAT,GAA2B;AACzB,WAAOV,SAAS,CAACW,MAAV,CAAkBd,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAac,WAAb,GAA2BC,QAA3B,CAAoCjB,KAAK,CAACkB,KAAN,CAAYF,WAAZ,EAApC,CAA9B,CAAP;AACD;;AAED,QAAMG,KAAK,GAAGL,eAAe,EAA7B;AACA,MAAIK,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB,OAAOR,mBAAmB,EAA1B;AACxB,SACEO,KAAK,CAACC,MAAN,GAAe,EAAf,IAAqB,CAACpB,KAAK,CAACkB,KAA5B,GACEJ,eAAe,GAAGO,GAAlB,CAAuBpB,OAAD,IAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAO,CAACC,IAAtB;AAA4B,IAAA,OAAO,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAAnC,CADF,GAGA,0CAJF;AAMD,CAhCD;;AAkCA,eAAeE,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Country = (props) => {\n  return (\n    props.country.name\n  )\n}\n\nconst Countries = (props) => {\n  const [countries, setCountries] = useState([])\n  \n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all')\n      .then((response) => {\n        console.log(response);\n        setCountries(response.data)\n      })\n  }, [])\n  \n  function handleSingleCountry() {\n    return (\n      <div>\n        <h2>{countries[0].name}</h2>\n        {countr}\n      </div>\n    )\n  }\n\n  function filterCountries() {\n    return countries.filter((country) => country.name.toLowerCase().includes(props.input.toLowerCase()))\n  }\n\n  const cntrs = filterCountries()\n  if (cntrs.length === 1) return handleSingleCountry()\n  return (\n    cntrs.length < 11 || !props.input ?\n      filterCountries().map((country) => <li ><Country key={country.name} country={country}></Country></li>)\n    :\n    'Too many matches, specify another filter'\n  )\n}\n\nexport default Countries"]},"metadata":{},"sourceType":"module"}