{"ast":null,"code":"var _jsxFileName = \"/home/or/Desktop/Programming Learning/Full Stack Open/part1/courseinfo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n\n  const Header = props => {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, props.course);\n  };\n\n  const Part = props => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Part \", props.num, \" is \", props.part.name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"It has \", props.part.exercises, \" exercises\"));\n  };\n\n  const Content = props => {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Part, {\n      num: 1,\n      part: props.parts[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Part, {\n      num: 2,\n      part: props.parts[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Part, {\n      num: 3,\n      part: props.parts[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  };\n\n  const Total = props => {\n    const total = props.parts.reduce((sum, part) => sum + part.exercises, 0);\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"The total amount of exercises is \", total);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Content, {\n    parts: cparts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Total, {\n    parts: parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/or/Desktop/Programming Learning/Full Stack Open/part1/courseinfo/src/index.js"],"names":["React","ReactDOM","App","course","name","parts","exercises","Header","props","Part","num","part","Content","Total","total","reduce","sum","cparts","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,oCADO;AAEbC,IAAAA,KAAK,EAAE,CACL;AACED,MAAAA,IAAI,EAAE,uBADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KADK,EAKL;AACEF,MAAAA,IAAI,EAAE,0BADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KALK,EASL;AACEF,MAAAA,IAAI,EAAE,sBADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KATK;AAFM,GAAf;;AAkBA,QAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACL,MAAX,CADF;AAGD,GAJD;;AAMA,QAAMM,IAAI,GAAID,KAAD,IAAW;AACtB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUA,KAAK,CAACE,GAAhB,UAAyBF,KAAK,CAACG,IAAN,CAAWP,IAApC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYI,KAAK,CAACG,IAAN,CAAWL,SAAvB,eAFF,CADF;AAMD,GAPD;;AASA,QAAMM,OAAO,GAAIJ,KAAD,IAAW;AACzB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,CAAX;AAAc,MAAA,IAAI,EAAEA,KAAK,CAACH,KAAN,CAAY,CAAZ,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,CAAX;AAAc,MAAA,IAAI,EAAEG,KAAK,CAACH,KAAN,CAAY,CAAZ,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,CAAX;AAAc,MAAA,IAAI,EAAEG,KAAK,CAACH,KAAN,CAAY,CAAZ,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD,GARD;;AAUA,QAAMQ,KAAK,GAAIL,KAAD,IAAW;AACvB,UAAMM,KAAK,GAAGN,KAAK,CAACH,KAAN,CAAYU,MAAZ,CAAmB,CAACC,GAAD,EAAML,IAAN,KAAeK,GAAG,GAAGL,IAAI,CAACL,SAA7C,EAAwD,CAAxD,CAAd;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAsCQ,KAAtC,CADF;AAGD,GALD;;AAMA,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEX,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEc,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAzDD;;AA2DAJ,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n  const Header = (props) => {\n    return (\n      <h1>{props.course}</h1>\n    )\n  }\n\n  const Part = (props) => {\n    return (\n      <div>\n        <h2>Part {props.num} is {props.part.name}</h2>\n        <h3>It has {props.part.exercises} exercises</h3>\n      </div>\n    )\n  }\n\n  const Content = (props) => {\n    return (\n      <p>\n        <Part num={1} part={props.parts[0]}></Part>\n        <Part num={2} part={props.parts[1]}></Part>\n        <Part num={3} part={props.parts[2]}></Part>\n      </p>\n    )\n  }\n\n  const Total = (props) => {\n    const total = props.parts.reduce((sum, part) => sum + part.exercises, 0)\n    return (\n      <h2>The total amount of exercises is {total}</h2>\n    )\n  }\n  return (\n    <>\n      <Header course={course}></Header>\n      <Content parts={cparts}></Content>\n      <Total parts={parts}></Total>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}